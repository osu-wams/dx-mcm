apiSnsTopic:
  Type: AWS::SNS::Topic
  Properties:
    TopicName: ${self:service.name}-api

messagesTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: ${self:service.name}-Messages
    AttributeDefinitions:
      - AttributeName: sendAt
        AttributeType: S
      - AttributeName: id
        AttributeType: S
      - AttributeName: status
        AttributeType: S
    KeySchema:
      - AttributeName: sendAt
        KeyType: HASH
      - AttributeName: id
        KeyType: RANGE
    ProvisionedThroughput:
      ReadCapacityUnits: 5
      WriteCapacityUnits: 5
    GlobalSecondaryIndexes:
      - IndexName: ${self:service.name}-MessageStatuses
        KeySchema:
          - AttributeName: status
            KeyType: HASH
          - AttributeName: sendAt
            KeyType: RANGE
        Projection:
          NonKeyAttributes:
            - id
          ProjectionType: INCLUDE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

userMessagesTable:
  Type: AWS::DynamoDB::Table
  Properties:
    TableName: ${self:service.name}-UserMessages
    AttributeDefinitions:
      - AttributeName: osuId
        AttributeType: S
      - AttributeName: channelMessageId
        AttributeType: S
      - AttributeName: channelSendAt
        AttributeType: S
      - AttributeName: statusSendAt
        AttributeType: S
      - AttributeName: sendAt
        AttributeType: S
    KeySchema:
      - AttributeName: osuId
        KeyType: HASH
      - AttributeName: channelMessageId
        KeyType: RANGE
    BillingMode: PAY_PER_REQUEST
    LocalSecondaryIndexes:
      - IndexName: ${self:service.name}-UserMessageByChannel
        KeySchema:
          - AttributeName: osuId
            KeyType: HASH
          - AttributeName: channelSendAt
            KeyType: RANGE
        Projection:
          ProjectionType: INCLUDE
          NonKeyAttributes:
            - channelMessageId
      - IndexName: ${self:service.name}-UserMessageBySendAt
        KeySchema:
          - AttributeName: osuId
            KeyType: HASH
          - AttributeName: sendAt
            KeyType: RANGE
        Projection:
          ProjectionType: INCLUDE
          NonKeyAttributes:
            - channelMessageId
    GlobalSecondaryIndexes:
      - IndexName: ${self:service.name}-UserMessageStatuses
        KeySchema:
          - AttributeName: osuId
            KeyType: HASH
          - AttributeName: statusSendAt
            KeyType: RANGE
        Projection:
          ProjectionType: ALL

staticBucket:
  Type: AWS::S3::Bucket
  Properties:
    BucketName: ${self:service.name}-static
    AccessControl: PublicRead

apiCloudFront:
  Type: AWS::CloudFront::Distribution
  Properties:
    DistributionConfig:
      Aliases:
        - ${env:AWS_CLOUDFRONT_ALIAS}
      Comment: OSU DX Multi-Channel Messaging API Distribution
      DefaultCacheBehavior:
        AllowedMethods:
          - HEAD
          - GET
          - OPTIONS
          - PUT
          - POST
          - PATCH
          - DELETE
        CachedMethods:
          - HEAD
          - GET
        Compress: false
        DefaultTTL: 86400
        ForwardedValues:
          Cookies:
            Forward: all
          Headers:
            - Authorization
            - x-api-key
          QueryString: true
        TargetOriginId: ${self:service.name}-cloudfront
        ViewerProtocolPolicy: https-only
      Enabled: true
      HttpVersion: http2
      Origins:
        - Id: ${self:service.name}-cloudfront
          CustomOriginConfig:
            OriginProtocolPolicy: https-only
            OriginSSLProtocols:
              - TLSv1.2
          DomainName:
            !Join [
              '',
              [!Ref ApiGatewayRestApi, '.execute-api.${self:provider.region}.amazonaws.com'],
            ]
          OriginPath: '/${self:provider.stage}'
      PriceClass: PriceClass_All
