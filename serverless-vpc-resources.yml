# VPC Definition
Vpc:
  Type: AWS::EC2::VPC
  Properties:
    CidrBlock: 10.0.0.0/16

# Subnets in us-west-2
# Private Subnets use a NatGateway
# Public Subnet uses InternetGateway to facilitate Lambda access to the Internet (Grouper API access)
PrivateSubnetA:
  Type: AWS::EC2::Subnet
  Properties:
    AvailabilityZone: us-west-2a
    CidrBlock: 10.0.1.0/24
    VpcId:
      Ref: Vpc
PrivateSubnetB:
  Type: AWS::EC2::Subnet
  Properties:
    AvailabilityZone: us-west-2b
    CidrBlock: 10.0.2.0/24
    VpcId:
      Ref: Vpc
PrivateSubnetC:
  Type: AWS::EC2::Subnet
  Properties:
    AvailabilityZone: us-west-2c
    CidrBlock: 10.0.3.0/24
    VpcId:
      Ref: Vpc
PublicSubnetD:
  Type: AWS::EC2::Subnet
  Properties:
    AvailabilityZone: us-west-2d
    CidrBlock: 10.0.21.0/24
    VpcId:
      Ref: Vpc

# NAT Gateway for private subnets/routes to access public subnet
NatGateway:
  Type: AWS::EC2::NatGateway
  Properties:
    AllocationId: ${env:AWS_EIP_ID}
    SubnetId:
      Ref: PublicSubnetD
PrivateRouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
    VpcId:
      Ref: Vpc
PrivateRoute:
  Type: AWS::EC2::Route
  Properties:
    RouteTableId:
      Ref: PrivateRouteTable
    DestinationCidrBlock: 0.0.0.0/0
    NatGatewayId:
      Ref: NatGateway
SubnetRouteTableAssociationPrivateA:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
    SubnetId:
      Ref: PrivateSubnetA
    RouteTableId:
      Ref: PrivateRouteTable
SubnetRouteTableAssociationPrivateB:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
    SubnetId:
      Ref: PrivateSubnetB
    RouteTableId:
      Ref: PrivateRouteTable
SubnetRouteTableAssociationPrivateC:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
    SubnetId:
      Ref: PrivateSubnetC
    RouteTableId:
      Ref: PrivateRouteTable

# Internet Gateway for public subnet/route
InternetGateway:
  Type: AWS::EC2::InternetGateway
VPCGatewayAttachment:
  Type: AWS::EC2::VPCGatewayAttachment
  Properties:
    VpcId:
      Ref: Vpc
    InternetGatewayId:
      Ref: InternetGateway
PublicRouteTable:
  Type: AWS::EC2::RouteTable
  Properties:
    VpcId:
      Ref: Vpc
PublicRoute:
  Type: AWS::EC2::Route
  Properties:
    RouteTableId:
      Ref: PublicRouteTable
    DestinationCidrBlock: 0.0.0.0/0
    GatewayId:
      Ref: InternetGateway
SubnetRouteTableAssociationPublicD:
  Type: AWS::EC2::SubnetRouteTableAssociation
  Properties:
    SubnetId:
      Ref: PublicSubnetD
    RouteTableId:
      Ref: PublicRouteTable

# Lambda Internet outbound access
LambdaSecurityGroup:
  Type: 'AWS::EC2::SecurityGroup'
  Properties:
    GroupName: ${self:service}-${env:ENV, 'development'}-lambda
    GroupDescription: Allow all outbound traffic, no inbound
    SecurityGroupIngress:
      - IpProtocol: -1
        CidrIp: 127.0.0.1/32
    VpcId:
      Ref: Vpc

# Elasticache network security
RedisSecurityGroup:
  Type: AWS::EC2::SecurityGroup
  Properties:
    VpcId:
      Ref: Vpc
    GroupName: ${self:service}-redis-security-group
    GroupDescription: Security Group to grant access to Redis Session Store.
    SecurityGroupEgress:
      - IpProtocol: '-1'
        CidrIp: 0.0.0.0/0
    SecurityGroupIngress:
      - IpProtocol: tcp
        CidrIp: 0.0.0.0/0
        FromPort: 6379
        ToPort: 6379

# Elasticache network security
RedisCacheClusterSubnetGroup:
  Type: AWS::ElastiCache::SubnetGroup
  Properties:
    CacheSubnetGroupName: ${self:service}-redis-subnet-group
    Description: Redis cluster subnets
    SubnetIds:
      - Ref: PrivateSubnetA
      - Ref: PrivateSubnetB
      - Ref: PrivateSubnetC

# Elasticache cluster
RedisCacheCluster:
  Type: AWS::ElastiCache::CacheCluster
  Properties:
    Engine: redis
    ClusterName: ${self:service}-redis-cluster
    EngineVersion: 5.0.6
    CacheNodeType: cache.t2.small
    NumCacheNodes: 1
    VpcSecurityGroupIds:
      - !GetAtt RedisSecurityGroup.GroupId
    CacheSubnetGroupName:
      Ref: RedisCacheClusterSubnetGroup
